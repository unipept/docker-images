# Development images for Stijn's thesis
name: Build Database Image
# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'dev/stijn-*'

env:
  CACHE_KEY: CI

permissions:
  packages: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/unipept/stijn-thesis
          tags: |
            type=raw,value=stijn-debug-image
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Setup Rust Cache
        id: cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ env.CACHE_KEY }}
      - name: Compile Rust binaries
        run: |
          git clone -b feature/postgres --depth 1 https://github.com/stijndcl/unipept-database/ pipeline-source
          bash ./pipeline-source/scripts/build_binaries.sh
          mkdir rust-binaries
          find ./pipeline-source/scripts/helper_scripts -maxdepth 1 -type f -executable -exec cp {} ./rust-binaries \;
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: 'unipept-database'
          platforms: linux/amd64,linux/arm64
          push: true
          file: 'unipept-database/Dockerfile'
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
