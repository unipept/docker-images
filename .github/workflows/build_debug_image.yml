# Development images for Stijn's thesis
name: Build Database Image

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'dev/stijn-*'

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["rust-complete"]
#        image: ["java-no-dl", "java-no-dl-lz4", "rust-no-dl-lz4", "rust-no-dl-lz4-z-truc"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
#      - name: Pull SwissProt XML File
#        run: wget https://ftp.expasy.org/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.xml.gz -q -O ./unipept-database/uniprot_sprot.xml.gz
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/unipept/stijn-thesis
          tags: |
            type=raw,value=${{ matrix.image }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: 'unipept-database'
          platforms: linux/amd64,linux/arm64
          push: true
          file: 'unipept-database/${{ matrix.image }}.Dockerfile'
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
